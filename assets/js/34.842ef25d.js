(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{518:function(s,t,a){"use strict";a.r(t);var n=a(63),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"parsers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsers"}},[s._v("#")]),s._v(" Parsers")]),s._v(" "),a("p",[s._v("Helper functions for parsing things like time values or easing names.")]),s._v(" "),a("h2",{attrs:{id:"parseeasing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parseeasing"}},[s._v("#")]),s._v(" parseEasing()")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseEasing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -> Function")]),s._v("\n")])])]),a("p",[s._v("Return an easing function for the input.")]),s._v(" "),a("p",[a("strong",[s._v("Params")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("{String | Function} value")]),s._v(" - The easing name, or compound name. If it's a\nfunction, then that is simply returned.")])]),s._v(" "),a("p",[a("strong",[s._v("Examples")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("Parsers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseEasing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'backIn + quadOut'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -> compound easing function")]),s._v("\n")])])]),a("h2",{attrs:{id:"parseinterpolator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parseinterpolator"}},[s._v("#")]),s._v(" parseInterpolator()")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInterpolator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -> Function")]),s._v("\n")])])]),a("p",[s._v("Return an interpolator function for the input.")]),s._v(" "),a("p",[a("strong",[s._v("Params")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("{String | Function} value")]),s._v(" - The interpolator name. If it's a\nfunction, then that is simply returned.")])]),s._v(" "),a("p",[a("strong",[s._v("Examples")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("Parsers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInterpolator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'radians'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -> Interpolators.radians")]),s._v("\n")])])]),a("h2",{attrs:{id:"parsetime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsetime"}},[s._v("#")]),s._v(" parseTime()")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -> Function")]),s._v("\n")])])]),a("p",[s._v("Return a value for the time in milliseconds (ms) for a time formatted\nstring.")]),s._v(" "),a("p",[a("strong",[s._v("Params")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("{String | Number} value")]),s._v(" - The time in an appropriate format. If it's a\nnumber, then that is simply returned.")])]),s._v(" "),a("p",[a("strong",[s._v("Examples")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("Parsers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2.5s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -> 2500")]),s._v("\nParsers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -> 120000")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);